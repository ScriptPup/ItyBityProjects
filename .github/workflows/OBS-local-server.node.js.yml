# @format

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

defaults:
  run:
    working-directory: FancyTwitchServer

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: FancyTwitchServer/package-lock.json
      - name: Install npm dependancies matching dev environment lock
        run: npm ci
      - name: Build the server & client packages
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Build SASS to CSS
        run: npm run build-css
      - name: Build electron ts to js
        run: npm run build-electron
      - name: Package electron
        run: npm run pack
      - name: Rename release
        run: |
          ls
          cd dist
          mv "FancyTwitchServer Setup 1.0.0.exe" "FancyTwitchServer.exe"
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/FancyTwitchServer.exe
          asset_name: FancyTwitchServer.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Publish release
        uses: eregon/publish-release@v1
          env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
      